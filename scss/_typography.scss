/* extract base_typography.css */
/*---
title:   Typography
name:    base_typography
section: Base
---

Font sizes must be set in em or rem - use em values for text elements and rem
values for components (if necessary). Read more about this from
[Chris Coyier - Font Size Idea: px at the Root, rem for Components, em for Text
Elements](https://css-tricks.com/rems-ems/).  
Other allowed measurement units are vw, vh and % - basically all relative units
are allowed.  
Pixel (px) values are only allowed for hairline borders - this is because
there is no other reliable way to display 1px wide lines with relative units.
*/
/**
 * Variables
 */
// Responsive typography.
$base-typography-responsive:          true !default;
$base-typography-responsive-headline: false !default;

// Semantic classes.
$base-typography-semantic-headline-class: false !default;
$base-typography-semantic-anchor-class:   false !default;

// Anchor.
$base-typography-a-color:                 map-get($cs, a) !default;
$base-typography-a-color-visited:         $base-typography-a-color !default;
$base-typography-a-text-decoration:       none !default;
$base-typography-a-text-decoration-hover: underline !default;



html,
button,
input,
select,
textarea {
  color: $font-base-color;
  font-family: unquote(map-get-deep($fonts, a, family));
}

/**
 * Basic font styles.
 */
html {
  line-height: strip-unit($font-base-line-height / $font-base-size);
  @if $base-typography-responsive {
    font-size: strip-unit($font-base-size) / (16 / 87.5) * 1%;
    @media (min-width: map-get($breakpoints, s)) {
      font-size: strip-unit($font-base-size) / (16 / 100) * 1%;
    }
  } @else {
    font-size: strip-unit($font-base-size) / (16 / 100) * 1%;
  }
}



/*---
title:   Headline
name:    base_typography_headline
section: base_typography
---

```example:html
<h1>Headline 1</h1>
<h2>Headline 2</h2>
<h3>Headline 3</h3>
<h4>Headline 4</h4>
<h5>Headline 5</h5>
<h6>Headline 6</h6>
```
*/
%main-headline {
  font-weight: map-get-deep($fonts, b, weights, bold);
  font-family: unquote(map-get-deep($fonts, b, family));
  line-height: 1.25;
}

%sub-headline {
  font-family: unquote(map-get-deep($fonts, a, family));
  line-height: inherit;
}

%h1 {
  @extend %main-headline;
  @if $base-typography-responsive-headline {
    text-transform: uppercase;
    font-size: map-get($font-sizes, xl);
    @media (min-width: map-get($breakpoints, s)) {
      text-transform: none;
      font-size: map-get($font-sizes, h1);
    }
  } @else {
    font-size: map-get($font-sizes, h1);
  }
}

%h2 {
  @extend %main-headline;
  @if $base-typography-responsive-headline {
    text-transform: uppercase;
    font-size: map-get($font-sizes, l);
    @media (min-width: map-get($breakpoints, s)) {
      text-transform: none;
      font-size: map-get($font-sizes, h2);
    }
  } @else {
    font-size: map-get($font-sizes, h2);
  }
}

%h3 {
  @extend %main-headline;
  @if $base-typography-responsive-headline {
    font-variant: small-caps;
    font-size: map-get($font-sizes, l);
    @media (min-width: map-get($breakpoints, s)) {
      font-variant: normal;
      font-size: map-get($font-sizes, h3);
    }
  } @else {
    font-size: map-get($font-sizes, h3);
  }
}

%h4 {
  @extend %main-headline;
  @if $base-typography-responsive-headline {
    font-style: italic;
    font-size: map-get($font-sizes, l);
    @media (min-width: map-get($breakpoints, s)) {
      font-style: normal;
      font-size: map-get($font-sizes, h4);
    }
  } @else {
    font-size: map-get($font-sizes, h4);
  }
}

%h5 {
  @extend %sub-headline;
  font-weight: map-get-deep($fonts, a, weights, bold);
  font-size: map-get($font-sizes, h5);
}

%h6 {
  @extend %sub-headline;
  font-weight: map-get-deep($fonts, a, weights, normal);
  font-size: map-get($font-sizes, h6);
}

h1 {
  @extend %h1;
}

h2 {
  @extend %h2;
}

h3 {
  @extend %h3;
}

h4 {
  @extend %h4;
}

h5 {
  @extend %h5;
}

h6 {
  @extend %h6;
}



@if $base-typography-semantic-headline-class {
  /*---
  title:   Semantic headline classes
  name:    base_typography_semantic_headline_classes
  section: base_typography
  ---

  .h1-.h6 classes should be used to maintain the semantically appropriate
  heading levels - NOT for use on non-headings.

```example:html
<h1 class="h2">h1 looking like h2</h1>
<h2 class="h3">h2 looking like h3</h2>
<h3 class="h4">h3 looking like h4</h3>
<h4 class="h5">h4 looking like h5</h4>
<h5 class="h6">h5 looking like h6</h5>
```
  */
  .h1 {
    @extend %h1;
    @if $base-typography-responsive-headline {
      font-style: normal;
      font-variant: normal;
    }
  }

  .h2 {
    @extend %h2;
    @if $base-typography-responsive-headline {
      font-style: normal;
      font-variant: normal;
    }
  }

  .h3 {
    @extend %h3;
    @if $base-typography-responsive-headline {
      text-transform: none;
      font-style: normal;
    }
  }

  .h4 {
    @extend %h4;
    @if $base-typography-responsive-headline {
      text-transform: none;
      font-variant: normal;
    }
  }

  .h5 {
    @extend %h5;
    @if $base-typography-responsive-headline {
      text-transform: none;
      font-style: normal;
      font-variant: normal;
    }
  }

  .h6 {
    @extend %h6;
    @if $base-typography-responsive-headline {
      text-transform: none;
      font-style: normal;
      font-variant: normal;
    }
  }
}



/*---
title:   Anchor
name:    base_typography_anchor
section: base_typography
---

```example:html
<a href="#">readmore...</a>
```
*/
%a {
  color: $base-typography-a-color;
  text-decoration: $base-typography-a-text-decoration;
  cursor: pointer;
  &:visited {
    color: $base-typography-a-color-visited;
  }
  &:hover,
  &:focus {
    text-decoration: $base-typography-a-text-decoration-hover;
  }
}

a {
  @extend %a;
}



@if $base-typography-semantic-anchor-class {
  /*---
  title:   Semantic anchor class
  name:    base_typography_semantic_anchor_class
  section: base_typography
  ---

  .a class can be used to create a fake link inside of a block link.

```example:html
<span class="a">readmore...</span>
```
  */
  .a {
    @extend %a;
  }
}



/*---
title:   Whitespace
name:    base_typography_whitespace
section: base_typography
---

```example:html
<h1>Lorem Ipsum dolor</h1>
<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy
eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam
voluptua.</p>
<ul>
  <li>Lorem Ipsum dolor</li>
  <li>Consetetur sadipscing elitr</li>
</ul>
<h2>Lorem Ipsum</h2>
<p>Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy
eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam
voluptua.</p>
<h3>Lorem Ipsum</h3>
<p>Consetetur sadipscing elitr, sed diam nonumy eirmod labore et dolore magna
aliquyam erat tempor invidunt ut labore et dolore magna aliquyam erat, sed diam
voluptua.</p>
```
*/
h1,
h2,
h3,
h4,
h5,
h6,
h1 + h2,
h2 + h3,
h3 + h4,
h4 + h5,
h5 + h6,
p,
ul,
ol,
dl,
pre,
form,
table,
figure,
address,
fieldset,
blockquote {
  margin-top: 0;
  margin-bottom: 0;
}

%base-typography-whitespace {
  * + & {
    margin-top: map-get($spacing, m);
  }
}

* + p,
* + ul,
* + ol,
* + dl,
* + img,
* + pre,
* + form,
* + table,
* + figure,
* + address,
* + fieldset,
* + blockquote,
* + h1,
* + h2,
* + h3,
* + h4,
* + h5,
* + h6 {
  @extend %base-typography-whitespace;
}

ul,
ol,
dl {
  padding-left: map-get($spacing, m);
}

// No margin top for nested lists
li {
  ul,
  ol,
  dl {
    margin-top: 0;
  }
}

// No margin top for nested tables
table {
  table {
    margin-top: 0;
  }
}

// Normalize default font related tags
b,
strong {
  font-weight: map-get-deep($fonts, a, weights, bold);
}

small {
  font-size: map-get($font-sizes, s);
}

// Better img behaviour
img {
  display: inline-block;
}
/* end extract base_typography.css */
